<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Student Dashboard | Academic Portal</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

  <style>
    :root {
      --primary-color: #2c3e50;
      --secondary-color: #3498db;
      --accent-color: #e74c3c;
      --light-bg: #f8f9fa;
      --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: var(--light-bg);
      color: #333;
      line-height: 1.6;
    }

    .dashboard-header {
      background: linear-gradient(135deg, var(--primary-color), #1a2530);
      color: white;
      padding: 1.5rem 0;
      margin-bottom: 2rem;
      box-shadow: var(--card-shadow);
    }

    .dashboard-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 2rem;
    }

    .welcome-card {
      background: white;
      border-radius: 10px;
      box-shadow: var(--card-shadow);
      margin-bottom: 2rem;
      padding: 1.5rem;
    }

    .attendance-table {
      background: white;
      border-radius: 10px;
      box-shadow: var(--card-shadow);
      overflow: hidden;
      margin-bottom: 2rem;
    }

    .table-header {
      background: var(--primary-color);
      color: white;
      padding: 1rem 1.5rem;
      font-weight: 600;
    }

    table {
      width: 100%;
      border-collapse: collapse;
    }

    table th {
      background-color: #f1f5f9;
      font-weight: 600;
      padding: 1rem;
      text-align: center;
      border-bottom: 1px solid #e2e8f0;
    }

    table td {
      padding: 1rem;
      text-align: center;
      vertical-align: middle;
      border-bottom: 1px solid #e2e8f0;
    }

    .status-badge {
      padding: 6px 14px;
      border-radius: 20px;
      font-size: 0.8rem;
      font-weight: 600;
    }

    .alert-item {
      border-left: 4px solid #007bff;
      background: #f8f9fa;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 10px;
    }

    .alert-item.priority-high {
      border-left-color: #dc3545;
      background: #f8d7da;
    }

    .alert-item.priority-medium {
      border-left-color: #ffc107;
      background: #fff3cd;
    }

    .alert-item.priority-low {
      border-left-color: #28a745;
      background: #d4edda;
    }

    .btn-logout {
      margin-top: 20px;
      font-weight: 600;
      border-radius: 8px;
      padding: 10px 20px;
    }
  </style>
</head>
<body>
  <!-- Header -->
  <div class="dashboard-header">
    <div class="dashboard-container">
      <div class="d-flex justify-content-between align-items-center">
        <div>
          <h1 class="h3 mb-0">Academic Portal</h1>
          <p class="mb-0 opacity-75">Student Dashboard</p>
        </div>
        <div class="text-end">
          <p class="mb-0">Today: <span id="current-date"></span></p>
          <p class="mb-0 opacity-75" id="current-time"></p>
        </div>
      </div>
    </div>
  </div>

  <div class="dashboard-container">
    <!-- Welcome Card -->
    <div class="welcome-card">
      <div class="d-flex justify-content-between align-items-center">
        <div>
          <h2 class="h4 mb-1"><i class="fas fa-user-graduate me-2 text-primary"></i>Welcome, <%= studentName %></h2>
          <p class="mb-0">Your overall attendance is <strong><%= overallPercentage %>%</strong></p>
        </div>
        <a href="/students/logout" class="btn btn-outline-danger btn-logout">
          <i class="fas fa-sign-out-alt me-2"></i>Logout
        </a>
      </div>
    </div>

    <!-- Alerts Section -->
    <div class="attendance-table">
      <div class="table-header d-flex justify-content-between align-items-center">
        <h3 class="h5 mb-0"><i class="fas fa-bell me-2"></i>Recent Alerts</h3>
        <span class="badge bg-light text-dark" id="alert-count">0 Alerts</span>
      </div>
      <div class="p-3">
        <div id="alerts-container">
          <div class="text-center py-4">
            <i class="fas fa-spinner fa-spin fa-2x text-muted"></i>
            <p class="mt-2 text-muted">Loading alerts...</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Attendance Table -->
    <div class="attendance-table">
      <div class="table-header">
        <h3 class="h5 mb-0"><i class="fas fa-clipboard-check me-2"></i>Your Attendance</h3>
      </div>
      <div class="table-responsive">
        <table class="table align-middle">
          <thead>
            <tr>
              <th>Subject</th>
              <th>Attended</th>
              <th>Total</th>
              <th>Percentage</th>
              <th>Status</th>
            </tr>
          </thead>
          <tbody>
            <% for (let subject in subjectStats) { 
                 let data = subjectStats[subject];
                 let percentage = data.total > 0 ? Math.round((data.attended / data.total) * 100) : 0;
                 let statusClass = percentage >= 75 ? "bg-success" : (percentage >= 60 ? "bg-warning" : "bg-danger");
                 let statusText = percentage >= 75 ? "Good" : (percentage >= 60 ? "Average" : "Low");
            %>
            <tr>
              <td class="fw-bold"><%= subject %></td>
              <td><%= data.attended %></td>
              <td><%= data.total %></td>
              <td><%= percentage %>%</td>
              <td><span class="status-badge <%= statusClass %> text-white"><%= statusText %></span></td>
            </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- Toast Container for Notifications -->
  <div id="toast-container" class="toast-container position-fixed top-0 end-0 p-3"></div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Update current date and time
    function updateDateTime() {
      const now = new Date();
      const dateOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
      const timeOptions = { hour: '2-digit', minute: '2-digit', second: '2-digit' };
      
      document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', dateOptions);
      document.getElementById('current-time').textContent = now.toLocaleTimeString('en-US', timeOptions);
    }

    updateDateTime();
    setInterval(updateDateTime, 1000);

    // Load alerts from server
    async function loadAlerts() {
      try {
        console.log('üîÑ Loading alerts...');
        
        const response = await fetch('/students/get-alerts');
        
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const alerts = await response.json();
        console.log('‚úÖ Alerts loaded:', alerts);
        
        displayAlerts(alerts);
      } catch (error) {
        console.error('‚ùå Error loading alerts:', error);
        showError('Failed to load alerts: ' + error.message);
      }
    }

    function displayAlerts(alerts) {
      const container = document.getElementById('alerts-container');
      const countElement = document.getElementById('alert-count');
      
      // Check if alerts is an array
      if (!Array.isArray(alerts) || alerts.length === 0) {
        container.innerHTML = `
          <div class="text-center py-4">
            <i class="fas fa-bell-slash fa-2x text-muted"></i>
            <h5 class="mt-2 text-muted">No Alerts</h5>
            <p class="mb-0">You don't have any alerts at the moment.</p>
          </div>
        `;
        countElement.textContent = '0 Alerts';
        return;
      }

      countElement.textContent = `${alerts.length} Alert${alerts.length !== 1 ? 's' : ''}`;
      
      container.innerHTML = alerts.map(alert => `
        <div class="alert-item priority-${alert.priority || 'medium'}">
          <div class="d-flex justify-content-between align-items-start mb-2">
            <h6 class="mb-0 fw-bold">${alert.professorName || 'Professor'} - ${alert.subject || 'General'}</h6>
            <small class="text-muted">${new Date(alert.timestamp).toLocaleString()}</small>
          </div>
          <p class="mb-2">${alert.message || 'No message content'}</p>
          <div class="d-flex justify-content-between align-items-center">
            <span class="badge bg-${getPriorityColor(alert.priority)}">
              ${(alert.priority || 'medium').toUpperCase()} PRIORITY
            </span>
            ${!alert.read ? `
              <button class="btn btn-sm btn-outline-primary mark-read-btn" data-alert-id="${alert._id}">
                <i class="fas fa-check me-1"></i>Mark as Read
              </button>
            ` : '<span class="text-success"><i class="fas fa-check-circle"></i> Read</span>'}
          </div>
        </div>
      `).join('');

      // Add event listeners for mark as read buttons
      document.querySelectorAll('.mark-read-btn').forEach(btn => {
        btn.addEventListener('click', function() {
          const alertId = this.dataset.alertId;
          markAlertAsRead(alertId, this);
        });
      });
    }

    function getPriorityColor(priority) {
      switch (priority) {
        case 'high': return 'danger';
        case 'medium': return 'warning';
        case 'low': return 'success';
        default: return 'secondary';
      }
    }

    function showError(message) {
      const container = document.getElementById('alerts-container');
      container.innerHTML = `
        <div class="alert alert-danger">
          <i class="fas fa-exclamation-triangle me-2"></i>
          <strong>Error Loading Alerts</strong>
          <p class="mb-2">${message}</p>
          <button class="btn btn-sm btn-primary" onclick="loadAlerts()">
            <i class="fas fa-redo me-1"></i>Try Again
          </button>
        </div>
      `;
    }

    async function markAlertAsRead(alertId, button) {
      try {
        console.log('üìù Marking alert as read:', alertId);
        
        const response = await fetch('/students/mark-alert-read', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ alertId: alertId })
        });
        
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const data = await response.json();
        
        if (data.success) {
          button.innerHTML = '<i class="fas fa-check-circle me-1"></i> Read';
          button.classList.remove('btn-outline-primary');
          button.classList.add('btn-success');
          button.disabled = true;
          
          showToast('‚úÖ Alert marked as read', 'success');
        } else {
          throw new Error(data.message || 'Failed to mark as read');
        }
      } catch (error) {
        console.error('‚ùå Error marking alert as read:', error);
        showToast('‚ùå Error: ' + error.message, 'danger');
      }
    }

    // Toast notification function
    function showToast(message, type = 'info') {
      const toastContainer = document.getElementById('toast-container');
      const toastId = 'toast-' + Date.now();
      
      const toastHtml = `
        <div id="${toastId}" class="toast align-items-center text-bg-${type} border-0" role="alert">
          <div class="d-flex">
            <div class="toast-body">
              ${message}
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
          </div>
        </div>
      `;
      
      toastContainer.insertAdjacentHTML('beforeend', toastHtml);
      
      const toastElement = document.getElementById(toastId);
      const toast = new bootstrap.Toast(toastElement, { delay: 3000 });
      toast.show();
      
      // Remove toast from DOM after hide
      toastElement.addEventListener('hidden.bs.toast', () => {
        toastElement.remove();
      });
    }

    // Load alerts when page loads
    document.addEventListener('DOMContentLoaded', function() {
      console.log('üöÄ Student dashboard loaded');
      loadAlerts();
    });
  </script>
</body>
</html>